
("build" ("files" ("circus" "athena-stop" "circus_upstart.conf" "circusd.ini" "env.conf" "roles") ("confd" ("conf.d" "cdpname.toml" "nginx_elbs.toml" "runtime.toml") ("templates" "cdpname.tmpl" "nginx_elbs.tmpl" "runtime.conf.tmpl") "confd.conf" "confd.toml") ("docker" "0_upstreams.conf" "Dockerfile.appbase" "Dockerfile.centralbase" "Dockerfile.j2" "Dockerfile.kong" "Dockerfile.nginx" "circusd.ini" "docker-entrypoint.sh" "dockerignore" "env.conf" "kong-entrypoint.sh" "nginx-clientcerts.conf" "nginx-entrypoint.sh" "nginx-redirect.conf") ("grafana" ("dashboards" ("influxdb_withfields" "README.md" "cluster.json" "events.json" "pods.json") "cluster.json" "pods.json") "Dockerfile" "README.md" "run.sh") ("k8s" ("ingress" ("api" "1_nginx_api_configmap.yaml" "2_nginx_api_service.yaml" "3_nginx_api_deployment.yaml") ("app" "1_nginx_app_configmap.yaml" "2_nginx_app_service.yaml" "3_nginx_app_deployment.yaml" "4_nginx_app_acp-system_arubathena.com_certs.yaml" "4_nginx_app_acp-system_test.pdt1.arubathena.com_certs.yaml" "4_nginx_app_central_arubathena.com_certs.yaml" "4_nginx_app_central_test.pdt1.arubathena.com_certs.yaml" "4_nginx_app_ingress-nginx_arubathena.com_certs.yaml" "4_nginx_app_ingress-nginx_test.pdt1.arubathena.com_certs.yaml" "4_nginx_app_netinsight_portal_arubathena.com_certs.yaml" "4_nginx_app_portal_arubathena.com_certs.yaml") ("common" "0_pre_reqs.yaml" "1_nginx_ssl_dh_param.yaml" "2_nginx_custom_headers.yaml" "3_client_certs.yaml" "4_default_backend.yaml" "5_quay.io_secret.yaml") ("device" "1_nginx_device_configmap.yaml" "2_nginx_device_service.yaml" "3_nginx_device_deployment.yaml" "4_nginx_device_acp-system_arubathena.com_certs.yaml" "4_nginx_device_acp-system_test.pdt1.arubathena.com_certs.yaml" "4_nginx_device_central_arubathena.com_certs.yaml" "4_nginx_device_central_test.pdt1.arubathena.com_certs.yaml" "4_nginx_device_ingress-nginx_arubathena.com_certs.yaml" "4_nginx_device_ingress-nginx_test.pdt1.arubathena.com_certs.yaml")) "apigw-ingress.yaml" "cassandra-secret.yaml" "central-env-configmap.yaml" "clis-debugging-configmap.yaml" "cm-td-agent-config.yml" "config-certs.yaml" "ds-logging-fluentd.yaml" "k8s-bootstrap.yaml" "k8s-sensu-bootstrap.yaml" "kong-deployment.yaml" "kong-svc.yaml" "kubedash-bootstrap.yaml" "kubedns.yaml" "logging-hc-ae-bootstrap.yaml" "logging-hc-ae-configmap.yaml" "logging-hc-se-configmap.yaml" "logging-hc-se-ds.yaml" "mnp-secrets-dev.yaml" "nginx-certs-arubathena.yaml" "nginx-deployment.yaml.j2" "nginx-device-deployment.yaml" "nginx-device-nc-deployment.yaml" "nginx-device-nc-svc.yaml" "nginx-device-svc.yaml" "nginx-mounted-configmap.yaml" "nginx-svc.yaml.j2" "nginx_cert_secrets.yaml" "ocp.properties.yaml" "ocps-env-configmap.yaml" "ocps-nginx-certs-arubathena.yaml" "pce-deployment.yaml" "webhook-secrets.yaml" "zookeeper-configmap.yaml") ("newrelic" "newrelic" "newrelic-plugin-agent.cfg.template" "newrelic.ini.template") ("nginx" ("apps" "acp_context_engine_ng.conf" "acp_hcms.conf" "acp_sample_app.conf" "acp_ucc.conf" "airgroup.conf" "airgroup_api_gateway.conf" "airgroup_internal_api.conf" "alertmanager_protected.conf" "apistream.conf" "aw_certificate.conf" "caas.conf" "clarity.conf" "clickstream.conf" "data_migration.conf" "grafana.conf" "license_management.conf" "ofc.conf" "rapids_api.conf" "ucc_se_xml_aggr.conf" "vrf_engine.conf" "wanconfigae.conf" "wanroutingse.conf") ("disabled-apps" "README.md" "upgradeservice-protected.conf") ("errorpages" "404.html" "502.html" "503.html") ("hybrid-apps" "acp_agent.conf" "acp_cloud_connector_service.conf" "alertmanager.conf" "logs_agent.conf" "watchdog.conf") ("multinodeappconf" "README.md" "config_groups.conf" "device_management.conf" "monitoring_3_switch.conf" "monitoring_4_iap.conf" "nginx.conf" "upstream.conf") "acp-custom-ca.crt" "alertmanager-htpasswd" "clientcert-ca.crt" "dhparam.pem" "grafana-htpasswd" "nginx.conf") ("pgbouncer" "mkauth.py" "pgbouncer.ini.tmpl" "pgusers") ("runtimes" "README.md" "runtime.cluster.conf" "runtime.dev.conf" "runtime.ocps.conf" "runtime.rcs.conf" "runtime.ut.conf") ("sensu" ("checks" "README") ("client" "config.json" "sensu-client" "sensu-client.conf" "subscriptions.py") ("config" "aws-creds.json" "client.json" "config.json" "sensu-client" "server-config.json") ("docker" ("rabbitmq" "Dockerfile" "build.sh") ("redis" "Dockerfile" "build.sh") ("sensu-client" "Dockerfile" "circusd.ini" "client.json" "config.json" "env.conf" "sensu-client.conf" "start.sh") ("sensu-server" "Dockerfile" "circusd.ini" "client_deregister.py" "sensu-config.py" "sensu-server.conf" "server-config.json" "start.sh") ("ui" "Dockerfile" "build.sh" "circus-sensu.conf" "circusd.ini" "config.json" "start.sh" "uchiwa.json")) ("k8s" "sensu-checks-configmap.yaml.j2" "sensu-clients-cluster-deployment.yaml.j2" "sensu-clients-nodes-daemonset.yaml.j2" "sensu-server-deployment.yaml.j2") ("other" "sensu-client") "README") ("services" "service.conf") ("spark" "aggregator.json" "presence.json" "proximity.json" "spark-jobs.yaml") ("system" "90-central.conf")) ("gmaster" ("docker" "Dockerfile.gmaster.j2" "circusd.ini" "env.conf" "gmaster-entrypoint.sh") ("newrelic" "newrelic.ini.template") ("nginx" ("apps" "gmaster.conf")) ("pgbouncer" "pgbouncer.ini.template" "pgbouncer_conf_generator.py" "pgusers") ("runtimes" "gmaster_runtime.dev.conf" "runtime_helper.py")) ("orders" ("docker" "Dockerfile.orders.j2" "circusd.ini" "env.conf" "orders-entrypoint.sh" "orders-namespace.yaml") ("newrelic" "newrelic.ini.template") ("nginx" ("apps" "athena_orders.conf" "base_url.conf" "global_login.conf" "global_orders.conf" "orders_dashboard.conf") ("sites-available" "custom.portal.arubanetworks.com" "portal.netinsight.arubanetworks.com" "signup.netinsight.arubanetworks.com")) ("pgbouncer" "pgbouncer.ini.tmpl" "pgbouncer_conf_generator.py" "pgusers") ("runtimes" "runtime.dev.conf" "runtime_helper.py") "build_artifacts.sh" "setup_container.sh") ("pg" "Dockerfile" "docker-entrypoint.sh" "pg-all.yml") ("rel_build" "central_containers.sh" "smoke_deploy.sh") ("spark" "requirements.txt" "sparkapp.py" "test-requirements.txt" "test_sparkapp.py") "README.md" "apigw.py" "app.py" "cfg.py" "debug.py" "dms.py" "env.py" "gmaster.py" "gmaster_k8s.py" "k8s.py" "msp.py" "orders.py" "orders_k8s.py" "private_cloud.py" "runtime.py" "spark.py" "tasks.py" "utils.py")
